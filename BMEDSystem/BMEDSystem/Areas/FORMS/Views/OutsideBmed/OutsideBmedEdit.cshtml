@model EDIS.Areas.FORMS.Models.Instrument

@using EDIS.Models.Identity
@inject CustomUserManager UserManager
@inject CustomRoleManager RoleManager

@{
    Layout = "~/Views/Shared/_PassedLayout.cshtml";
    ViewBag.Title = "編輯|外部醫療儀器使用申請單";
    if (TempData["SendMsg"] != null)
    {
        <script>
            var message = @Json.Serialize(TempData["SendMsg"]);
            alert(message);
        </script>
    }
}


<h2>編輯</h2>
<h4>外部醫療儀器使用申請單</h4>
<hr />
<div id="pnlFILES" style="margin: 10pt">
    <h2>夾帶附件檔案</h2>
    @await Component.InvokeAsync("FORMSAttainFilePList", new { id = Model.DocId, typ = "1" })
</div>




<ul class="nav nav-pills" style="font-size:120%">
    <li role="presentation" id="page1" class="active"><a href="#repairdtl" data-toggle="tab" style="padding-left:20px">申請資料</a></li>
    <li role="presentation" id="page2"><a href="#repairdt2" data-toggle="tab" style="padding-left:20px">審核內容</a></li>
    <li role="presentation" id="page3"><a href="#repairflow" data-toggle="tab" style="padding-left:20px">簽核作業</a></li>
</ul>

<hr />
<div class="tab-content">
    <div id="repairdtl" class="tab-pane fad in active">
        <div>
            @await Component.InvokeAsync("FORMSosbDtlDetails", new { id = Model.DocId })
        </div>
        <div>
            <a class="btn btn-default" href="@Url.Action("Index", "Home", new { Area = "" } )" id="homeBtn">回到簽核列表</a>
            <a class="btn btn-primary" href="@Url.Action("PrintRepairDoc", "OutsideBmed", new { Area = "FORMS", DocId = Model.DocId } )" target="_blank">列印</a>
            <a class="btn btn-primary" href="@Url.Action("PrintRepairDoc", "OutsideBmed", new { Area = "FORMS", DocId = Model.DocId, printType = 1 } )" target="_blank">一頁式列印</a>
        </div>
    </div>
    <div id="repairdt2" class="tab-pane fade">
        <div>
            @await Component.InvokeAsync("FORMSosbNewSContent", new { id = Model.DocId })
        </div>
    </div>
    <div id="repairflow" class="tab-pane fade">
        <div>
            @await Component.InvokeAsync("FORMSosbNextSFlow", new { id = Model.DocId })
        </div>
        <div>
            @await Component.InvokeAsync("FORMSOsbFlowList", new { id = Model.DocId })
        </div>
    </div>
</div>




@section Scripts {
    <script>
        function showmsg(data) {
            waitingDialog.hide('Loading Something...');
            $("#btnGO").attr("disabled", true);
            if (!data.success) {
                alert(data.error);
            }
            else {
                alert("送出成功!");
                window.close();
                window.opener.location.reload();
            }
        }
        function onError(data) {
            waitingDialog.hide('Loading Something...');
            document.getElementById('btnGO').disabled = false;
            var msg = JSON.parse(data.responseText);
            alert(msg.Error);

        };
        function presend() {
            //alert('test');
            document.getElementById('btnGO').disabled = true;
        }



    </script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
}

@*@section Styles {
        @Styles.Render("~/Content/fileinput/css")
    }*@



