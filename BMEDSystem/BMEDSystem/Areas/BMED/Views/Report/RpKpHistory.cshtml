@model IEnumerable<EDIS.Models.RpKpHistoryVModel>
@using Newtonsoft.Json
@using EDIS.Models.Identity
@inject CustomUserManager UserManager
@inject ApplicationDbContext _context

@{
    Layout = null;
    var qry = JsonConvert.DeserializeObject<ReportQryVModel>(TempData["qry"].ToString());
    var userDpt = "";
    var ur = _context.AppUsers.Where(u => u.UserName == User.Identity.Name).FirstOrDefault();
    if (ur != null)
    {
        userDpt = ur.DptId;
    }
}

<p>
    <a class="btn btn-default" href="@Url.Action("ExcelRpKpHistory", qry)">匯出Excel</a>
</p>
<div>
    @await Component.InvokeAsync("AssetView", new { id = ViewData["Ano"] })
</div>
<div>
    <h4>維修保養履歷</h4>
</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.DocType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DocId)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.AssetNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssetName)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.ApplyDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EngName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Hours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Cost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TroubleDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DealDes)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DocType)
            </td>
            <td>
                @if (item.DocType == "請修")
                {
                    @Html.ActionLink(item.DocId, "Views", "Repairs", new { id = item.DocId }, new { target = "_blank" })
                }
                else
                {
                    @Html.ActionLink(item.DocId, "Views", "Keeps", new { id = item.DocId }, new { target = "_blank" })
                }
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.AssetNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssetName)
                </td>*@
            <td>
                @item.ApplyDate.ToString("yyyy/MM/dd")
            </td>
            <td>
                @if (@item.EndDate != null)
                {
                    @item.EndDate.Value.ToString("yyyy/MM/dd");
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EngName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hours)
            </td>
            @if (userDpt == "8420") //醫工部與相關人員才顯示設備取得金額
            {
                <td>@Html.DisplayFor(modelItem => item.Cost)</td>
            }
            else if (UserManager.IsInRole(User, "Admin") || UserManager.IsInRole(User, "MedAdmin") ||
                    UserManager.IsInRole(User, "MedEngineer") || UserManager.IsInRole(User, "MedAssetMgr") ||
                    UserManager.IsInRole(User, "MedMgr") || UserManager.IsInRole(User, "MedDirector") ||
                    UserManager.IsInRole(User, "MedToDo"))
            {
                <td>@Html.DisplayFor(modelItem => item.Cost)</td>
            }
            else
            {
                <td>******</td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.TroubleDes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DealDes)
            </td>
        </tr>
    }

</table>
<div>
    @await Html.PartialAsync("AssetAnalysis", ViewData["Analysis"] as EDIS.Models.AssetAnalysis)
</div>