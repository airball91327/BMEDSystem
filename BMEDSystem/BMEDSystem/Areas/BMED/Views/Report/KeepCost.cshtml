@model X.PagedList.IPagedList<EDIS.Models.RepairKeepVModel>

@using Newtonsoft.Json
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
@using EDIS.Models.Identity

@inject CustomUserManager UserManager

@{
    //Layout = null;
    var qry = JsonConvert.DeserializeObject<ReportQryVModel>(TempData["qry"].ToString());

}
@*<script src="~/js/HtmltoExcel.js"></script>*@

@*<p>
        @Html.ActionLink("匯出Excel", "RepairKeepExcel")
    </p>*@
@*<input id="exportExcel" type="button" value="匯出Excel" class="btn btn-default"
    onclick="javascript:exportExcel('tbToExcel')" />*@
<p>
    <a class="btn btn-default" href="@Url.Action("ExcelKeepCost", qry)">匯出Excel</a>
</p>

<table class="table" id="tbToExcel">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CustId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CustNam)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().KeepAmt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().KpEndAmt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().KeepFinishedRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().KeepCost)
        </th>
    </tr>
    @{
        int kcnt = 0;
        int kent = 0;
        int rcnt = 0;
        int rent = 0;
        foreach (var item in Model)
        {
            rcnt += item.RepairAmt;
            rent += item.RpEndAmt;
            kcnt += item.KeepAmt;
            kent += item.KpEndAmt;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CustId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustNam)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KeepAmt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KpEndAmt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KeepFinishedRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KeepCost)
                </td>
            </tr>
        }
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>保養總件數：@Convert.ToString(kcnt)</td>
            @if (kcnt != 0)
            {
                <td>保養完成率：@decimal.Round(Convert.ToDecimal(kent) / Convert.ToDecimal(kcnt) * 100m, 2)</td>
            }
            else
            {
                <td>&nbsp;</td>
            }
        </tr>
    }

</table>


<div>
    @Html.PagedListPager(Model,
     page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
</div>